{"version":3,"sources":["uni-app:///main.js","webpack:///D:/软件杯/校园智能体小程序/pages/assistant/index.vue?d897","webpack:///D:/软件杯/校园智能体小程序/pages/assistant/index.vue?f694","webpack:///D:/软件杯/校园智能体小程序/pages/assistant/index.vue?92da","webpack:///D:/软件杯/校园智能体小程序/pages/assistant/index.vue?9711","uni-app:///pages/assistant/index.vue","webpack:///D:/软件杯/校园智能体小程序/pages/assistant/index.vue?e182","webpack:///D:/软件杯/校园智能体小程序/pages/assistant/index.vue?9027"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","data","tunnelUrl","inputMessage","scrollTop","userAvatar","botAvatar","chatMessages","type","content","quickAccessItems","icon","text","path","ongoingTasks","sessionId","currentTaskId","isAssistantTyping","assistants","selectedAssistant","websocketTask","websocketConnected","reconnectInterval","onLoad","console","uni","title","methods","initializeAssistant","KingdeeAgentService","assistantsResponse","targetAssistantId","targetAssistantName","foundAssistant","timestamp","assistantIdToUse","callbackUrlToUse","sessionResponse","errMsg","error","stack","response","sendMessage","userMessage","messageToSend","userInput","lastMessageIndex","addSystemMessage","scrollToBottom","startVoiceInput","showAttachMenu","handleQuickAccess","url","viewTaskDetail","loadMoreMessages","handleWebhookData","taskId","message","handleAction","handleWaitingAction","handleChatAction","handleTaskAction","id","description","progress","status","statusText","remainingTime","getTaskStatusText","running","success","fail","getTaskIcon","addOrUpdateBotMessage","removeBotMessage","connectWebSocket","clearInterval","onUnload","code","reason"],"mappings":"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AU;gBACA;gBAAA;gBAGApB;gBACAC;kBAAAC;gBAAA;gBAAA;gBAAA,OAEAG;kBACAd;kBACA8B;gBACA;cAAA;gBAHAJ;gBAKAhB;gBACAD;;gBAEA;gBACA;kBACA;kBACAA;gBACA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAGAC;gBACAD;gBACA;gBACA;gBACAsB;gBACA;kBACA,mFACAH;oBACAJ;oBACA9B;kBAAA,GACA;gBACA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;IAEAsC;MACA;QACAvC;QACAC;QACAyB;MACA;MACA;IACA;IAEA;IACAc;MAAA;MACA;QACA;QACA;QACA;QACA;MACA;IACA;IAEA;IACAC;MACAxB;QAAAC;QAAAf;MAAA;IACA;IAEA;IACAuC;MACAzB;QAAAC;QAAAf;MAAA;IACA;IAEA;IACAwC;MACA;QACA1B;UAAA2B;QAAA;MACA;QACA3B;UAAAC;UAAAf;QAAA;MACA;IACA;IAEA;IACA0C;MACA5B;QAAAC;QAAAf;MAAA;IACA;IAEA;IACA2C;MACA7B;QAAAC;QAAAf;MAAA;IACA;IAEA;IACA;IACA4C;MAAA;MACA/B;MAEA;QACAA;QACA;MACA;MAEA;QAAAT;QAAAyC;MACA;MAEA;QACAC;UAAA;QAAA;MACA;IACA;IAEAC;MACAlC;MACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;UACAA;MAAA;IAEA;IAEAmC;MACA;QACA;QACA;MACA;QAAA;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA;;MAEA;MACA;MACA;QACA;MACA;QACApC;MACA;IACA;IAEAqC;MACA;MACA;QAAA;MAAA;MAEA;QACAC;QACApC;QACAqC;QACAC;QACAC;QAAA;QACAC;QACAC;QAAA;QACAxD;MACA;MAEA;QACA;MACA;QACA;MACA;IACA;IAEAyD;MACA;QACAC;QACAC;QACAC;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;QAAA;MAAA;MACA;QACA;QACA;QACA;MACA;QACA;QACA;UACAX;UACAtD;UACAC;UACAyB;QACA;MACA;MACA;IACA;IAEAwC;MACA;QAAA;MAAA;MACA;QACA;MACA;IACA;IAEA;IACAC;MAAA;MACA;MACA;MACAnD;MAEA;QACA4B;QACAkB;UACA9C;QACA;QACA+C;UACA/C;QACA;MACA;MAEA;QACAA;QACA;QACA;QACA;UACAoD;UACA;QACA;QACA;MACA;MAEA;QACApD;QACA;UACA;UACA;UACA;QACA;UACAA;QACA;MACA;MAEA;QACAA;QACA;QACA;MACA;MAEA;QACAA;QACA;QACA;;QAEA;QAEA;UACAA;UACA;QACA;MACA;IACA;EACA;EACAqD;IACA;IACA;MACA;QACAC;QACAC;MACA;IACA;IACA;IACA;MACAH;MACA;IACA;EACA;AACA;AAAA,2B;;;;;;;;;;;;;ACnjBA;AAAA;AAAA;AAAA;AAA+lC,CAAgB,8kCAAG,EAAC,C;;;;;;;;;;;ACAnnC;AACA,OAAO,KAAU,EAAE,kBAKd","file":"pages/assistant/index.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/assistant/index.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./index.vue?vue&type=template&id=411d5278&scoped=true&\"\nvar renderjs\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=411d5278&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"411d5278\",\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/assistant/index.vue\"\nexport default component.exports","export * from \"-!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=template&id=411d5278&scoped=true&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var g0 = _vm.ongoingTasks.length\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        g0: g0,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=script&lang=js&\"","<template>\n\t<view class=\"assistant-page\">\n\t\t<!-- 聊天窗口 -->\n\t\t<scroll-view scroll-y=\"true\" class=\"chat-container\" :scroll-top=\"scrollTop\" :scroll-with-animation=\"true\" @scrolltoupper=\"loadMoreMessages\">\n\t\t\t<view class=\"chat-list\">\n\t\t\t\t<view v-for=\"(msg, index) in chatMessages\" :key=\"index\" class=\"chat-item\" :class=\"{ 'user-message': msg.type === 'user', 'system-message': msg.type === 'system' }\">\n\t\t\t\t\t<view class=\"avatar\">\n\t\t\t\t\t\t<image :src=\"msg.type === 'user' ? userAvatar : botAvatar\" mode=\"aspectFill\"></image>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"message-bubble\">\n\t\t\t\t\t\t<text>{{msg.content}}</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</scroll-view>\n\t\t\n\t\t<!-- 动态任务追踪面板 -->\n\t\t<view class=\"task-panel\" v-if=\"ongoingTasks.length > 0\">\n\t\t\t<text class=\"panel-title\">进行中的任务</text>\n\t\t\t<scroll-view scroll-x=\"true\" class=\"task-scroll\">\n\t\t\t\t<view class=\"task-card\" v-for=\"(task, index) in ongoingTasks\" :key=\"index\" @tap=\"viewTaskDetail(task)\">\n\t\t\t\t\t<view class=\"task-icon\">\n\t\t\t\t\t\t<image :src=\"task.icon\" mode=\"aspectFit\"></image>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"task-info\">\n\t\t\t\t\t\t<text class=\"task-title\">{{task.title}}</text>\n\t\t\t\t\t\t<text class=\"task-desc\">{{task.description}}</text>\n\t\t\t\t\t\t<view class=\"progress-bar\">\n\t\t\t\t\t\t\t<view class=\"progress-fill\" :style=\"{ width: task.progress + '%' }\"></view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<text class=\"task-time\">剩余时间: {{task.remainingTime}}</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"task-status\" :class=\"task.status\">\n\t\t\t\t\t\t<text>{{task.statusText}}</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</scroll-view>\n\t\t</view>\n\t\t\n\t\t<!-- 底部快捷指令菜单 (原顶部菜单) -->\n\t\t<view class=\"quick-access-menu\">\n\t\t\t<scroll-view scroll-x=\"true\" class=\"menu-scroll\">\n\t\t\t\t<view class=\"menu-item\" v-for=\"(item, index) in quickAccessItems\" :key=\"index\" @tap=\"handleQuickAccess(item)\">\n\t\t\t\t\t<view class=\"menu-icon\">\n\t\t\t\t\t\t<image :src=\"item.icon\" mode=\"aspectFit\"></image>\n\t\t\t\t\t</view>\n\t\t\t\t\t<text class=\"menu-text\">{{item.text}}</text>\n\t\t\t\t</view>\n\t\t\t</scroll-view>\n\t\t</view>\n\t\t\n\t\t<!-- 底部输入区域 -->\n\t\t<view class=\"input-area\">\n\t\t\t<view class=\"mic-btn\" @tap=\"startVoiceInput\">\n\t\t\t\t<image src=\"/static/images/scan.png\" mode=\"aspectFit\"></image>\n\t\t\t</view>\n\t\t\t<input type=\"text\" class=\"text-input\" v-model=\"inputMessage\" placeholder=\"请输入消息...\" @confirm=\"sendMessage\"/>\n\t\t\t<view class=\"attach-btn\" @tap=\"showAttachMenu\">\n\t\t\t\t<image src=\"/static/images/filter.png\" mode=\"aspectFit\"></image>\n\t\t\t</view>\n\t\t\t<view class=\"send-btn\" @tap=\"sendMessage\">\n\t\t\t\t<image src=\"/static/images/arrow-right.png\" mode=\"aspectFit\"></image>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\nimport KingdeeAgentService from '@/services/kingdeeAgent'\n\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\t// !!!重要!!!: 每次启动cloudflared后，请在这里更新为新的公网地址\n\t\t\ttunnelUrl: \"https://collectible-decent-brokers-garcia.trycloudflare.com\", \n\t\t\t\n\t\t\tinputMessage: '',\n\t\t\tscrollTop: 0,\n\t\t\tuserAvatar: '/static/images/avatar.png',\n\t\t\tbotAvatar: '/static/images/assistant.png',\n\t\t\tchatMessages: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'system',\n\t\t\t\t\tcontent: '您好！我是校园智能体，有什么可以帮助您的吗？'\n\t\t\t\t}\n\t\t\t],\n\t\t\tquickAccessItems: [\n\t\t\t\t{\n\t\t\t\t\ticon: '/static/images/schedule.png',\n\t\t\t\t\ttext: '查课表',\n\t\t\t\t\tpath: '/pages/features/schedule'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ticon: '/static/images/food.png',\n\t\t\t\t\ttext: '订餐',\n\t\t\t\t\tpath: '/pages/features/food'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ticon: '/static/images/library.png',\n\t\t\t\t\ttext: '借书',\n\t\t\t\t\tpath: '/pages/features/library'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ticon: '/static/images/classroom.png',\n\t\t\t\t\ttext: '教室预约',\n\t\t\t\t\tpath: '/pages/features/classroom'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ticon: '/static/images/express.png',\n\t\t\t\t\ttext: '快递',\n\t\t\t\t\tpath: '/pages/features/express'\n\t\t\t\t}\n\t\t\t],\n\t\t\tongoingTasks: [],\n\t\t\tsessionId: null,\n\t\t\tcurrentTaskId: null,\n\t\t\tisAssistantTyping: false,\n\t\t\tassistants: [],\n\t\t\tselectedAssistant: null,\n\t\t\twebsocketTask: null,\n\t\t\twebsocketConnected: false,\n\t\t\treconnectInterval: null\n\t\t}\n\t},\n\tasync onLoad() {\n\t\tconsole.log('页面加载开始');\n\t\ttry {\n\t\t\tawait this.initializeAssistant();\n\t\t\t// 初始化成功后，连接WebSocket\n\t\t\tthis.connectWebSocket();\n\t\t\tconsole.log('页面初始化与WebSocket连接流程启动');\n\t\t} catch (error) {\n\t\t\tconsole.error('页面初始化失败:', error);\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '初始化失败，请重试',\n\t\t\t\ticon: 'none'\n\t\t\t});\n\t\t}\n\t},\n\tmethods: {\n\t\tasync initializeAssistant() {\n\t\t\tconsole.log('开始初始化AI助手');\n\t\t\ttry {\n\t\t\t\tuni.showLoading({\n\t\t\t\t\ttitle: '正在初始化...'\n\t\t\t\t});\n\n\t\t\t\t// 获取助手列表\n\t\t\t\tconsole.log('正在获取助手列表...');\n\t\t\t\tconst assistantsResponse = await KingdeeAgentService.getAssistants();\n\t\t\t\tconsole.log('获取到的助手列表:', assistantsResponse);\n\t\t\t\t\n\t\t\t\tif (!assistantsResponse || !assistantsResponse.data || !Array.isArray(assistantsResponse.data) || !assistantsResponse.data.length) {\n\t\t\t\t\tconsole.error('助手列表无效或为空:', assistantsResponse);\n\t\t\t\t\tthrow new Error('获取助手列表失败或列表为空');\n\t\t\t\t}\n\n\t\t\t\tthis.assistants = assistantsResponse.data;\n\t\t\t\tif (this.assistants && this.assistants.length > 0) {\n\t\t\t\t\t// 目标助手的ID和名称\n\t\t\t\t\tconst targetAssistantId = \"2224845143255547904\";\n\t\t\t\t\tconst targetAssistantName = \"校园智能体\";\n\n\t\t\t\t\t// 尝试通过ID查找助手，如果找不到，再尝试通过名称查找\n\t\t\t\t\tlet foundAssistant = this.assistants.find(assistant => assistant.id === targetAssistantId);\n\t\t\t\t\tif (!foundAssistant) {\n\t\t\t\t\t\tconsole.warn(`未通过ID \"${targetAssistantId}\" 找到助手，尝试通过名称 \"${targetAssistantName}\" 查找...`);\n\t\t\t\t\t\tfoundAssistant = this.assistants.find(assistant => assistant.name === targetAssistantName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (foundAssistant) {\n\t\t\t\t\t\tthis.selectedAssistant = foundAssistant;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(`也未通过名称 \"${targetAssistantName}\" 找到助手，将默认使用列表中的第一个助手。`);\n\t\t\t\t\t\tthis.selectedAssistant = this.assistants[0]; // 如果特定助手未找到，回退到第一个\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log('已选择助手:', JSON.parse(JSON.stringify(this.selectedAssistant)));\n\n\t\t\t\t\t// 更新欢迎消息等\n\t\t\t\t\tthis.chatMessages.unshift({\n\t\t\t\t\t\ttype: 'system',\n\t\t\t\t\t\tcontent: this.selectedAssistant.openingSpeech || `您好，我是您的助手 ${this.selectedAssistant.name}，有什么可以帮助您的吗？`,\n\t\t\t\t\t\ttimestamp: Date.now()\n\t\t\t\t\t});\n\n\t\t\t\t\tuni.showLoading({ title: '正在创建新会话...' });\n\t\t\t\t\t\n\t\t\t\t\t// 从选中的助手中获取 assistantId\n\t\t\t\t\tconst assistantIdToUse = this.selectedAssistant.id; \n\t\t\t\t\t// 将回调URL指向我们的cloudflared服务器\n\t\t\t\t\tconst callbackUrlToUse = `${this.tunnelUrl}/webhook`;\n\n\t\t\t\t\tif (!assistantIdToUse) {\n\t\t\t\t\t\tconsole.error(\"无法从selectedAssistant中获取有效的ID!\");\n\t\t\t\t\t\tthrow new Error(\"无法初始化会话：助手ID缺失。\");\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log(`准备调用createSession，assistantId: ${assistantIdToUse}, callbackUrl: ${callbackUrlToUse}`);\n\t\t\t\t\tconst sessionResponse = await KingdeeAgentService.createSession(assistantIdToUse, callbackUrlToUse);\n\t\t\t\t\tconsole.log('创建会话响应 (原始):', JSON.parse(JSON.stringify(sessionResponse))); // 使用深拷贝打印\n\n\t\t\t\t\t// 在判断前打印关键值及其类型\n\t\t\t\t\tconsole.log('DEBUG: sessionResponse object:', sessionResponse);\n\t\t\t\t\tif (sessionResponse) {\n\t\t\t\t\t\tconsole.log('DEBUG: sessionResponse.status:', sessionResponse.status, 'type:', typeof sessionResponse.status);\n\t\t\t\t\t\tconsole.log('DEBUG: sessionResponse.data object:', sessionResponse.data);\n\t\t\t\t\t\tif (sessionResponse.data) {\n\t\t\t\t\t\t\tconsole.log('DEBUG: sessionResponse.data.sessionId:', sessionResponse.data.sessionId, 'type:', typeof sessionResponse.data.sessionId);\n\t\t\t\t\t\t\t// 额外检查sessionId是否为空字符串或布尔false\n\t\t\t\t\t\t\tconsole.log('DEBUG: sessionResponse.data.sessionId === \"\":', sessionResponse.data.sessionId === \"\");\n\t\t\t\t\t\t\tconsole.log('DEBUG: sessionResponse.data.sessionId === false:', sessionResponse.data.sessionId === false);\n\t\t\t\t\t\t\tconsole.log('DEBUG: !!sessionResponse.data.sessionId:', !!sessionResponse.data.sessionId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// 修正并增强判断条件\n\t\t\t\t\tif (sessionResponse && \n\t\t\t\t\t    sessionResponse.status && // 检查 status 是否为真值 (true, \"true\", 1 等都会通过)\n\t\t\t\t\t    sessionResponse.data && \n\t\t\t\t\t    typeof sessionResponse.data.sessionId === 'string' && // 确保 sessionId 是字符串\n\t\t\t\t\t    sessionResponse.data.sessionId.length > 0) { // 确保 sessionId 不是空字符串\n\t\t\t\t\t\tthis.sessionId = sessionResponse.data.sessionId;\n\t\t\t\t\t\tconsole.log('新会话创建成功，Session ID:', this.sessionId);\n\t\t\t\t\t\tuni.setNavigationBarTitle({ title: `与 ${this.selectedAssistant.name} 对话中` });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('创建会话失败或未返回有效的sessionId (检查后):', sessionResponse);\n\t\t\t\t\t\t// 抛出更具体的错误信息，如果可能的话\n\t\t\t\t\t\tlet errMsg = '创建会话失败或未返回有效的sessionId';\n\t\t\t\t\t\tif (sessionResponse && sessionResponse.data && typeof sessionResponse.data.sessionId === 'string' && sessionResponse.data.sessionId.length === 0) {\n\t\t\t\t\t\t\terrMsg = '创建会话成功，但返回的sessionId为空字符串';\n\t\t\t\t\t\t} else if (sessionResponse && sessionResponse.data && typeof sessionResponse.data.sessionId !== 'string') {\n\t\t\t\t\t\t\terrMsg = `创建会话成功，但sessionId类型不正确 (预期string，实际${typeof sessionResponse.data.sessionId})`;\n\t\t\t\t\t\t} else if (sessionResponse && !sessionResponse.status) {\n\t\t\t\t\t\t\terrMsg = `创建会话API响应状态非成功 (status: ${sessionResponse.status})`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow new Error(sessionResponse?.message || errMsg);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('未获取到助手列表，或列表为空');\n\t\t\t\t\tthis.chatMessages.unshift({\n\t\t\t\t\t\ttype: 'system',\n\t\t\t\t\t\tcontent: '抱歉，助手列表为空，无法初始化会话。'\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tuni.hideLoading();\n\t\t\t\tconsole.log('初始化完成');\n\t\t\t} catch (error) {\n\t\t\t\tuni.hideLoading();\n\t\t\t\tconsole.error('初始化AI助手失败:', {\n\t\t\t\t\terror: error.message,\n\t\t\t\t\tstack: error.stack,\n\t\t\t\t\tresponse: error.response\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// 使用默认欢迎消息\n\t\t\t\tthis.chatMessages = [{\n\t\t\t\t\ttype: 'system',\n\t\t\t\t\tcontent: '抱歉，AI助手连接失败，请稍后重试。'\n\t\t\t\t}];\n\t\t\t\t\n\t\t\t\tthrow error; // 向上传播错误\n\t\t\t}\n\t\t},\n\n\t\t// 发送消息\n\t\tasync sendMessage() {\n\t\t\tif (!this.inputMessage.trim()) {\n\t\t\t\tuni.showToast({ title: '不能发送空消息', icon: 'none' });\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.sessionId) {\n\t\t\t\tuni.showToast({ title: '会话未建立，请稍后重试', icon: 'none' });\n\t\t\t\tconsole.error('sendMessage 失败: sessionId 为空');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst userMessage = {\n\t\t\t\ttype: 'user',\n\t\t\t\tcontent: this.inputMessage.trim(),\n\t\t\t\ttimestamp: Date.now()\n\t\t\t};\n\t\t\tthis.chatMessages.push(userMessage);\n\t\t\tthis.scrollToBottom();\n\n\t\t\tconst messageToSend = this.inputMessage;\n\t\t\tthis.inputMessage = ''; // 立刻清空输入框\n\n\t\t\ttry {\n\t\t\t\tconsole.log(`准备发送消息: \"${messageToSend}\" 到 sessionId: ${this.sessionId}`);\n\t\t\t\tuni.showLoading({ title: '正在发送...' });\n\t\t\t\t\n\t\t\t\tconst response = await KingdeeAgentService.sendChatMessage({\n\t\t\t\t\tsessionId: this.sessionId,\n\t\t\t\t\tuserInput: messageToSend\n\t\t\t\t});\n\n\t\t\t\tuni.hideLoading();\n\t\t\t\tconsole.log('消息发送成功，API响应:', response);\n\t\t\t\t\n\t\t\t\t// 记录返回的taskId，可能用于后续操作，如停止任务\n\t\t\t\tif (response && response.taskId) {\n\t\t\t\t\tthis.currentTaskId = response.taskId;\n\t\t\t\t\tconsole.log('记录当前任务ID:', this.currentTaskId);\n\t\t\t\t}\n\n\t\t\t} catch (error) {\n\t\t\t\tuni.hideLoading();\n\t\t\t\tconsole.error('发送消息失败:', error);\n\t\t\t\tthis.addSystemMessage(`消息发送失败: ${error.message || '网络错误'}`);\n\t\t\t\t// 可选：将发送失败的消息状态更新\n\t\t\t\tconst lastMessageIndex = this.chatMessages.length - 1;\n\t\t\t\tif (this.chatMessages[lastMessageIndex] === userMessage) {\n\t\t\t\t\tthis.$set(this.chatMessages, lastMessageIndex, {\n\t\t\t\t\t\t...userMessage,\n\t\t\t\t\t\terror: true,\n\t\t\t\t\t\tcontent: userMessage.content + ' (发送失败)'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\taddSystemMessage(content) {\n\t\t\tthis.chatMessages.push({\n\t\t\t\ttype: 'system',\n\t\t\t\tcontent: content,\n\t\t\t\ttimestamp: Date.now()\n\t\t\t});\n\t\t\tthis.scrollToBottom();\n\t\t},\n\n\t\t// 滚动到底部\n\t\tscrollToBottom() {\n\t\t\tthis.$nextTick(() => {\n\t\t\t\tconst lastMessageIndex = this.chatMessages.length - 1;\n\t\t\t\tif (lastMessageIndex < 0) return;\n\t\t\t\t// 这里使用一个较大的值来确保滚动到底部\n\t\t\t\tthis.scrollTop = this.scrollTop + 9999;\n\t\t\t});\n\t\t},\n\t\t\n\t\t// 语音输入\n\t\tstartVoiceInput() {\n\t\t\tuni.showToast({ title: '语音功能开发中...', icon: 'none' });\n\t\t},\n\n\t\t// 附件菜单\n\t\tshowAttachMenu() {\n\t\t\tuni.showToast({ title: '附件功能开发中...', icon: 'none' });\n\t\t},\n\t\t\n\t\t// 快捷指令处理\n\t\thandleQuickAccess(item) {\n\t\t\tif (item.path) {\n\t\t\t\tuni.navigateTo({ url: item.path });\n\t\t\t} else {\n\t\t\t\tuni.showToast({ title: '功能开发中...', icon: 'none' });\n\t\t\t}\n\t\t},\n\n\t\t// 查看任务详情\n\t\tviewTaskDetail(task) {\n\t\t\tuni.showToast({ title: '任务详情功能开发中...', icon: 'none' });\n\t\t},\n\t\t\n\t\t// 加载更多历史消息\n\t\tloadMoreMessages() {\n\t\t\tuni.showToast({ title: '没有更多历史消息了', icon: 'none' });\n\t\t},\n\t\t\n\t\t// 以下是处理从Webhook接收到的消息的逻辑\n\t\t// 注意：这部分逻辑现在需要一个服务器来接收Webhook并将其推送到小程序\n\t\thandleWebhookData(payload) {\n\t\t\tconsole.log(\"处理Webhook数据:\", payload);\n\n\t\t\tif (!payload || !payload.message) {\n\t\t\t\tconsole.warn(\"收到的Webhook数据格式不正确\", payload);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tconst { message, sessionId, taskId } = payload;\n\t\t\tthis.currentTaskId = taskId;\n\n\t\t\tif (message.actionList && Array.isArray(message.actionList)) {\n\t\t\t\tmessage.actionList.forEach(action => this.handleAction(action));\n\t\t\t}\n\t\t},\n\t\t\n\t\thandleAction(action) {\n\t\t\tconsole.log(\"处理Action:\", action);\n\t\t\tswitch(action.type) {\n\t\t\t\tcase 'waiting':\n\t\t\t\t\tthis.handleWaitingAction(action);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'chat':\n\t\t\t\t\tthis.handleChatAction(action);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'task':\n\t\t\t\t\tthis.handleTaskAction(action);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn(\"未知的Action类型:\", action.type);\n\t\t\t}\n\t\t},\n\t\t\n\t\thandleWaitingAction(action) {\n\t\t\tif (action.waitState === 'start') {\n\t\t\t\tthis.isAssistantTyping = true;\n\t\t\t\tthis.addOrUpdateBotMessage(\"...\", \"typing_indicator\");\n\t\t\t} else { // end\n\t\t\t\tthis.isAssistantTyping = false;\n\t\t\t\tthis.removeBotMessage(\"typing_indicator\");\n\t\t\t}\n\t\t},\n\n\t\thandleChatAction(action) {\n\t\t\tthis.isAssistantTyping = false;\n\t\t\tthis.removeBotMessage(\"typing_indicator\"); // 移除\"正在输入\"\n\t\t\t\n\t\t\t// 根据用户提供的正确日志结构，从 action.data.message 获取文本\n\t\t\t// 并使用 action.data.taskId 作为唯一标识符来合并流式消息\n\t\t\tif (action.data && action.data.message) {\n\t\t\t\tthis.addOrUpdateBotMessage(action.data.message, action.data.taskId);\n\t\t\t} else {\n\t\t\t\tconsole.error(\"收到的chat action格式不正确，缺少 data.message:\", action);\n\t\t\t}\n\t\t},\n\t\t\n\t\thandleTaskAction(action) {\n\t\t\tconst taskData = action.task;\n\t\t\tconst existingTaskIndex = this.ongoingTasks.findIndex(t => t.id === taskData.taskId);\n\n\t\t\tconst formattedTask = {\n\t\t\t\tid: taskData.taskId,\n\t\t\t\ttitle: taskData.taskTitle,\n\t\t\t\tdescription: taskData.taskDesc,\n\t\t\t\tprogress: parseInt(taskData.progress, 10),\n\t\t\t\tstatus: taskData.status, // running, success, fail\n\t\t\t\tstatusText: this.getTaskStatusText(taskData.status),\n\t\t\t\tremainingTime: \"计算中...\", // 需要逻辑来计算\n\t\t\t\ticon: this.getTaskIcon(taskData.taskTitle)\n\t\t\t};\n\t\t\t\n\t\t\tif (existingTaskIndex > -1) {\n\t\t\t\tthis.$set(this.ongoingTasks, existingTaskIndex, formattedTask);\n\t\t\t} else {\n\t\t\t\tthis.ongoingTasks.push(formattedTask);\n\t\t\t}\n\t\t},\n\n\t\tgetTaskStatusText(status) {\n\t\t\tconst map = {\n\t\t\t\trunning: \"进行中\",\n\t\t\t\tsuccess: \"已完成\",\n\t\t\t\tfail: \"已失败\",\n\t\t\t};\n\t\t\treturn map[status] || \"未知\";\n\t\t},\n\n\t\tgetTaskIcon(title) {\n\t\t\tif (title.includes(\"课表\")) return \"/static/images/schedule.png\";\n\t\t\tif (title.includes(\"订餐\")) return \"/static/images/food.png\";\n\t\t\treturn \"/static/images/task.png\"; // 默认图标\n\t\t},\n\n\t\taddOrUpdateBotMessage(content, messageId) {\n\t\t\tconst existingMsgIndex = this.chatMessages.findIndex(m => m.id === messageId);\n\t\t\tif (existingMsgIndex > -1) {\n\t\t\t\t// 更新现有消息\n\t\t\t\tconst msg = this.chatMessages[existingMsgIndex];\n\t\t\t\tthis.$set(this.chatMessages[existingMsgIndex], 'content', msg.content + content);\n\t\t\t} else {\n\t\t\t\t// 添加新消息\n\t\t\t\tthis.chatMessages.push({\n\t\t\t\t\tid: messageId,\n\t\t\t\t\ttype: 'system',\n\t\t\t\t\tcontent: content,\n\t\t\t\t\ttimestamp: Date.now()\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.scrollToBottom();\n\t\t},\n\t\t\n\t\tremoveBotMessage(messageId) {\n\t\t\tconst msgIndex = this.chatMessages.findIndex(m => m.id === messageId);\n\t\t\tif (msgIndex > -1) {\n\t\t\t\tthis.chatMessages.splice(msgIndex, 1);\n\t\t\t}\n\t\t},\n\n\t\t// --- WebSocket相关方法 ---\n\t\tconnectWebSocket() {\n\t\t\t// 从 \"https://xxx.com\" 生成 \"wss://xxx.com\"\n\t\t\tconst wsUrl = this.tunnelUrl.replace(/^http/, 'ws');\n\t\t\tconsole.log(`尝试连接WebSocket: ${wsUrl}`);\n\n\t\t\tthis.websocketTask = uni.connectSocket({\n\t\t\t\turl: wsUrl,\n\t\t\t\tsuccess: () => {\n\t\t\t\t\tconsole.log(\"uni.connectSocket 调用成功\");\n\t\t\t\t},\n\t\t\t\tfail: (err) => {\n\t\t\t\t\tconsole.error(\"uni.connectSocket 调用失败\", err);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.websocketTask.onOpen(() => {\n\t\t\t\tconsole.log('✅ WebSocket 连接已打开');\n\t\t\t\tthis.websocketConnected = true;\n\t\t\t\t// 清除可能存在的重连定时器\n\t\t\t\tif (this.reconnectInterval) {\n\t\t\t\t\tclearInterval(this.reconnectInterval);\n\t\t\t\t\tthis.reconnectInterval = null;\n\t\t\t\t}\n\t\t\t\tthis.addSystemMessage(\"智能助手连接成功！\");\n\t\t\t});\n\n\t\t\tthis.websocketTask.onMessage((res) => {\n\t\t\t\tconsole.log('收到WebSocket消息:', res.data);\n\t\t\t\ttry {\n\t\t\t\t\tconst payload = JSON.parse(res.data);\n\t\t\t\t\t// 调用我们已经写好的Webhook处理逻辑\n\t\t\t\t\tthis.handleWebhookData(payload);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('解析WebSocket消息失败:', e);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.websocketTask.onError((err) => {\n\t\t\t\tconsole.error('WebSocket 连接发生错误:', err);\n\t\t\t\tthis.websocketConnected = false;\n\t\t\t\tthis.addSystemMessage(\"与助手的连接发生错误，请检查网络。\");\n\t\t\t});\n\n\t\t\tthis.websocketTask.onClose((res) => {\n\t\t\t\tconsole.log('🔌 WebSocket 连接已关闭', res);\n\t\t\t\tthis.websocketConnected = false;\n\t\t\t\tif (this.reconnectInterval) return; // 防止重复设置\n\t\t\t\t\n\t\t\t\tthis.addSystemMessage(\"与助手连接已断开，尝试重新连接...\");\n\t\t\t\t\n\t\t\t\tthis.reconnectInterval = setInterval(() => {\n\t\t\t\t\tconsole.log(\"尝试重新连接WebSocket...\");\n\t\t\t\t\tthis.connectWebSocket();\n\t\t\t\t}, 5000); // 每5秒重连一次\n\t\t\t});\n\t\t}\n\t},\n\tonUnload() {\n\t\t// 页面卸载时关闭WebSocket连接\n\t\tif (this.websocketTask) {\n\t\t\tthis.websocketTask.close({\n\t\t\t\tcode: 1000,\n\t\t\t\treason: '页面关闭'\n\t\t\t});\n\t\t}\n\t\t// 清除重连定时器\n\t\tif(this.reconnectInterval) {\n\t\t\tclearInterval(this.reconnectInterval);\n\t\t\tthis.reconnectInterval = null;\n\t\t}\n\t}\n}\n</script>\n\n<style scoped>\n/* ... existing styles ... */\n.assistant-page {\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 100vh;\n\tbackground-color: #f5f5f5;\n\tpadding-bottom: env(safe-area-inset-bottom);\n}\n\n/* 快捷指令菜单样式 - 现在放在底部 */\n.quick-access-menu {\n\tbackground-color: #ffffff;\n\tpadding: 20rpx 0;\n\tborder-top: 1rpx solid #e0e0e0;\n\tbox-shadow: 0 -2rpx 6rpx rgba(0, 0, 0, 0.1);\n\tposition: relative;\n\tz-index: 10;\n}\n\n.menu-scroll {\n\twhite-space: nowrap;\n\tpadding: 0 20rpx;\n}\n\n.menu-item {\n\tdisplay: inline-block;\n\ttext-align: center;\n\tmargin-right: 30rpx;\n\twidth: 120rpx;\n}\n\n.menu-icon {\n\twidth: 80rpx;\n\theight: 80rpx;\n\tmargin: 0 auto;\n\tbackground-color: #e6f2ff;\n\tborder-radius: 50%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n\n.menu-icon image {\n\twidth: 50rpx;\n\theight: 50rpx;\n}\n\n.menu-text {\n\tfont-size: 24rpx;\n\tcolor: #333;\n\tmargin-top: 10rpx;\n}\n\n/* 聊天窗口 */\n.chat-container {\n\tflex: 1;\n\tpadding: 20rpx;\n\toverflow-y: auto;\n}\n\n.chat-list {\n\tpadding-bottom: 20rpx;\n}\n\n.chat-item {\n\tdisplay: flex;\n\tmargin-bottom: 30rpx;\n}\n\n.user-message {\n\tflex-direction: row-reverse;\n}\n\n.avatar {\n\twidth: 80rpx;\n\theight: 80rpx;\n\tborder-radius: 50%;\n\toverflow: hidden;\n\tflex-shrink: 0;\n}\n\n.avatar image {\n\twidth: 100%;\n\theight: 100%;\n}\n\n.message-bubble {\n\tmax-width: 70%;\n\tpadding: 20rpx;\n\tborder-radius: 20rpx;\n\tmargin: 0 20rpx;\n\tword-break: break-all;\n}\n\n.system-message .message-bubble {\n\tbackground-color: #007AFF;\n\tcolor: #ffffff;\n\tborder-top-left-radius: 0;\n}\n\n.user-message .message-bubble {\n\tbackground-color: #E0E0E0;\n\tcolor: #333333;\n\tborder-top-right-radius: 0;\n}\n\n/* 任务面板 */\n.task-panel {\n\tbackground-color: #ffffff;\n\tpadding: 20rpx;\n\tborder-top: 1rpx solid #e0e0e0;\n\tborder-bottom: 1rpx solid #e0e0e0;\n}\n\n.panel-title {\n\tfont-size: 28rpx;\n\tfont-weight: bold;\n\tcolor: #333;\n\tmargin-bottom: 20rpx;\n}\n\n.task-scroll {\n\twhite-space: nowrap;\n}\n\n.task-card {\n\tdisplay: inline-block;\n\twidth: 450rpx;\n\tbackground-color: #ffffff;\n\tborder-radius: 20rpx;\n\tpadding: 20rpx;\n\tmargin-right: 20rpx;\n\tbox-shadow: 0 2rpx 10rpx rgba(0, 0, 0, 0.1);\n\tposition: relative;\n}\n\n.task-icon {\n\twidth: 60rpx;\n\theight: 60rpx;\n\tposition: absolute;\n\ttop: 20rpx;\n\tleft: 20rpx;\n}\n\n.task-icon image {\n\twidth: 100%;\n\theight: 100%;\n}\n\n.task-info {\n\tmargin-left: 80rpx;\n}\n\n.task-title {\n\tfont-size: 28rpx;\n\tfont-weight: bold;\n\tcolor: #333;\n}\n\n.task-desc {\n\tfont-size: 24rpx;\n\tcolor: #666;\n\tmargin: 10rpx 0;\n}\n\n.progress-bar {\n\theight: 10rpx;\n\tbackground-color: #f0f0f0;\n\tborder-radius: 5rpx;\n\toverflow: hidden;\n\tmargin: 10rpx 0;\n}\n\n.progress-fill {\n\theight: 100%;\n\tbackground-color: #007AFF;\n}\n\n.task-time {\n\tfont-size: 24rpx;\n\tcolor: #999;\n}\n\n.task-status {\n\tposition: absolute;\n\ttop: 20rpx;\n\tright: 20rpx;\n\tpadding: 5rpx 10rpx;\n\tborder-radius: 10rpx;\n\tfont-size: 22rpx;\n}\n\n.task-status.processing {\n\tbackground-color: #e6f2ff;\n\tcolor: #007AFF;\n}\n\n.task-status.ready {\n\tbackground-color: #e6fff2;\n\tcolor: #00B578;\n}\n\n.task-status.warning {\n\tbackground-color: #fff9e6;\n\tcolor: #FF9500;\n}\n\n/* 底部输入区域 */\n.input-area {\n\tbackground-color: #ffffff;\n\tpadding: 20rpx;\n\tborder-top: 1rpx solid #e0e0e0;\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.mic-btn, .attach-btn, .send-btn {\n\twidth: 60rpx;\n\theight: 60rpx;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n\n.mic-btn image, .attach-btn image, .send-btn image {\n\twidth: 40rpx;\n\theight: 40rpx;\n}\n\n.text-input {\n\tflex: 1;\n\theight: 70rpx;\n\tbackground-color: #f5f5f5;\n\tborder-radius: 35rpx;\n\tpadding: 0 20rpx;\n\tmargin: 0 20rpx;\n\tfont-size: 28rpx;\n}\n</style> ","import mod from \"-!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=style&index=0&id=411d5278&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=style&index=0&id=411d5278&scoped=true&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1749358752308\n      var cssReload = require(\"D:/app/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"/\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}